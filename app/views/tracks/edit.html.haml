- track = @track_data.track
- provide :title, title(track)

.track-edit-data

  .container.top-buffer
    = form_for track, remote: true, html: {class:  'form-horizontal', role: 'form', id: 'track_edit_form'} do |f|
      .content-block
        = link_to track_path(track) do
          %i.fa.fa-chevron-left
          = t('.back')
        .row
          .col-sm-12#heights-chart
          .col-sm-12
            = link_to track_jump_range_path(track.id), remote: true, class: 'track-edit__refresh-range' do
              %i.fa.fa-refresh

            .time-selector
              %input#time-selector{type: 'text', name: 'time-selector' , value: ''}
        %hr
        = f.hidden_field 'ff_start', id: 'ff_start'
        = f.hidden_field 'ff_end', id: 'ff_end'

        - if current_user && current_user.has_role?(:admin)
          .form-group
            %span.col-sm-3.control-label
              = t('static_pages.index.track_form.name')
            .col-sm-6
              = f.select :profile_id,
                         options_for_select([ ([@track.pilot_name, @track.profile_id] if @track.pilot) ], @track.profile_id),
                         { include_blank: true },
                         placeholder: t('tracks.form.profile_select_placeholder'),
                         class: 'form-control',
                         'data-controller': 'select2--profiles'

              = f.text_field 'name', 
                             class: 'form-control',
                             placeholder: t('tracks.form.profile_text_placeholder'),
                             type: 'text'
            .col-sm-6.col-sm-offset-3
              %span
                %span.toggle-profile-caption= t('tracks.form.toggle_profile_caption')
                %a.toggle-profile{href: '#'}= t('tracks.form.toggle_profile_link')

        .form-group
          %span.col-sm-3.control-label
            = t('static_pages.index.track_form.suit')
          .col-sm-6
            = f.select :suit_id,
                       options_for_select([ ([@track.suit_name, @track.suit_id] if @track.suit) ], @track.suit_id),
                       { include_blank: true },
                       class: 'form-control suit-group',
                       'data-controller': 'select2--suits'

            = f.text_field :missing_suit_name,
                           class: 'form-control suit-group',
                           placeholder: t('tracks.form.suit_text_placeholder'),
                           type: 'text'

          .col-sm-6.col-sm-offset-3
            %span
              %span.toggle-suit-caption= t('tracks.form.toggle_suit_caption')
              %a.toggle-suit{href: '#'}= t('tracks.form.toggle_suit_link')

        .form-group
          %span.col-sm-3.control-label
            = t('static_pages.index.track_form.location')
          .col-sm-6
            = f.select :place_id,
                       options_for_select([ ([@track.place_name, @track.place_id] if @track.place) ], @track.place_id),
                       { include_blank: true },
                       placeholder: t('tracks.form.place_select_placeholder'),
                       class: 'form-control place-group',
                       'data-controller': 'select2--places'

            = f.text_field 'location',
                           class: 'form-control place-group', 
                           placeholder: t('static_pages.index.track_form.location_plh'), 
                           type: 'text'
          .col-sm-6.col-sm-offset-3
            %span
              %span.toggle-place-caption= t('tracks.form.toggle_place_caption')
              %a.toggle-place{href: '#'}= t('tracks.form.toggle_place_link')

        .form-group
          %span.col-sm-3.control-label
            = t('static_pages.index.track_form.kind')
          .btn-group.col-sm-9{data: {toggle: 'buttons'}}
            %label.btn.btn-default{class: ('active' if track.skydive?)}
              = f.radio_button 'kind', 'skydive'
              = 'Skydive'

            %label.btn.btn-default{class: ('active' if track.base?)}
              = f.radio_button 'kind', 'base'
              = 'B.A.S.E'

        - if user_signed_in?
          .form-group
            %span.col-sm-3.control-label
              = t('tracks.edit.visibility')
            .btn-group.col-sm-9{data: {toggle: 'buttons'}}
              %label.btn.btn-default{ class:  ('active' if track.public_track?) }
                = f.radio_button 'visibility', 'public_track'
                = t('visibility.public')
              %label.btn.btn-default{ class:  ('active' if track.unlisted_track?) }
                = f.radio_button 'visibility', 'unlisted_track'
                = t('visibility.unlisted')
              %label.btn.btn-default{ class:  ('active' if track.private_track?) }
                = f.radio_button 'visibility', 'private_track'
                = t('visibility.private')
        
        .form-group
          %span.col-sm-3.control-label
            = t('static_pages.index.track_form.comment')
          .col-sm-6
            = f.text_area 'comment',
                          class: 'form-control',
                          rows: 3,
                          placeholder: t('static_pages.index.track_form.comment_plh')

        - if current_user && current_user.has_role?(:admin)

          .form-group
            .col-sm-6.col-sm-offset-3
              .checkbox
                %label
                  = f.check_box :disqualified_from_online_competitions
                  = t('activerecord.attributes.track.disqualified_from_online_competitions')

        - if @track.track_file
          .form-group
            .col-sm-6.col-sm-offset-3
              Download file:
              = link_to @track.track_file.file_file_name, track_download_path(@track), 'data-turbolinks': false

        %hr
        .row
          .col-sm-12
            .pull-right
              = f.submit t('general.save'), class: 'btn btn-success'
              = link_to t('general.cancel'), track, class: 'btn btn-default'
            .btn.btn-default
              = link_to t('general.delete'),
                          track,
                          method: :delete,
                          data: {confirm: t('tracks.show.delete_confirmation')},
                          class: 'text-danger'

- content_for :page_js do
  :javascript
    // Tear down
    $(document).one('turbolinks:before-cache', function() {
      $('#time-selector').ionRangeSlider('remove');
    });

    $('#track_edit_form').validate({
      ignore: 'input[type=hidden]',
      rules: {
        'track[suit_id]': {
          required: function() {
            return $('[name="track[suit_id]"]').is(':visible');
          }
        },
        'track[missing_suit_name]': {
          required: function() {
            return $('[name="track[missing_suit_name]"]').is(':visible');
          }
        },
        'track[place_id]': {
          required: function() {
            return $('[name="track[place_id]"]').is(':visible');
          }
        },
        'track[location]': {
          required: function() {
            return $('[name="track[location]"]').is(':visible');
          }
        },
      },
      messages: {
        'track[suit]': {
          require_from_group: I18n.t('jquery_validate.required_field')
        },
        'track[location]': {
          require_from_group: I18n.t('jquery_validate.required_field')
        }
      },
      highlight: function(element) {
        $(element).closest('.form-group').addClass('has-error');
      },
      unhighlight: function(element) {
        $(element).closest('.form-group').removeClass('has-error');
      },
      errorPlacement: function(error, element) {
        if (element.hasClass('suit-group') || element.hasClass('place-group')) {
          error.appendTo( element.closest('div') );    
        } else {
          error.insertAfter(element);
        }
      }
    });

    $('#heights-chart').highcharts({
      chart: {
        type: 'area'
      },
      title: {
        text: "#{I18n.t('tracks.edit.elev_chart')}"
      },
      plotOptions: {
        series: {
          marker: {
            radius: 1
          }
        }
      },
      yAxis: {
        title: {
          text: "#{I18n.t('tracks.edit.elevation')}, #{I18n.t('units.m')}"
        }
      },
      xAxis: {
        plotBands: [
          {
            color: 'gray',
            from: 0,
            to: 0,
            id: 'plotband-start'
          },
          {
            color: 'gray',
            from: 0,
            to: 0,
            id: 'plotband-end'
          },
        ]},
        tooltip: {
          crosshairs: true
        },
        credits: {
          enabled: false
        },
        series: [
          {
            name: "#{I18n.t('tracks.edit.elevation')}",
            pointInterval: 10,
            tooltip: {
              valueSuffix: "#{I18n.t('units.m')}"
            },
            data: JSON.parse("#{@track_data.points.to_json}")
          }
        ]
      });

    var view = new Skyderby.views.TrackEditView({
      el: '.track-edit-data',
      max_rel_time: #{@track_data.duration}
    });
    view.render();


.container.top-buffer
  .page-header
    %h2
      = t('users.profile.edit.title')
      = @profile.name

  .content-block
    = form_for @profile, html: {class: 'edit-user-profile form-horizontal'} do |f|
      .form-group
        = f.label :name, class: 'col-sm-2 control-label'
        .col-sm-5
          = f.text_field :name, autofocus: true, class: 'form-control'

      .form-group
        = f.label :country, class: 'col-sm-2 control-label'
        .col-sm-5
          = f.select :country_id,
                     options_for_select([[@profile.country_name, @profile.country_id]], @profile.country_id),
                     { include_blank: true },
                     placeholder: 'Select country',
                     class: 'form-control',
                     'data-controller': 'select2--countries'

      .form-group
        = f.label t('activerecord.attributes.profile.userpic'), class: 'col-sm-2 control-label', :for => :userpic
        .col-sm-4
          = f.file_field :userpic

      .form-group
        .col-sm-offset-2.col-sm-8
          = f.submit t('general.save'), class: 'btn btn-primary'

  - if @profile.owner && @profile.belongs_to_user?
    %a.col-sm-offset-2{data: {toggle: 'modal', target: '#CredentialsModal'}}
      = t('users.profile.edit.edit_email_pass')

    .modal.fade{:id => 'CredentialsModal', :tabindex => '-1', :role => 'dialog', :aria => {:labelledby => 'myModalLabel', :hidden => 'true'}}
      .modal-dialog
        .modal-content
          .modal-header
            %button.close{:type => 'button', :data => {:dismiss => 'modal'}}
              %span{:aria => {:hidden => 'true'}}
                &times;
                %span.sr-only
                  Close

            %h4.modal-title#myModalLabel
              = t('users.profile.edit.edit_reg_data')

          %br

          = form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put, class: 'form-horizontal' }) do |f|
            = devise_error_messages!

            .form-group
              = f.label t('activerecord.attributes.user.email'), class: 'col-sm-4 control-label', :for => :email
              .col-sm-7
                = f.email_field :email, class: 'form-control'

            - if devise_mapping.confirmable? && resource.pending_reconfirmation?
              %div
                Currently waiting confirmation for:
                = resource.unconfirmed_email

            .form-group
              = f.label t('activerecord.attributes.user.current_password'), class: 'col-sm-4 control-label', :for => :current_password
              .col-sm-7
                = f.password_field :current_password, autocomplete: 'off', class: 'form-control', :placeholder => 'Необходимо ввести текущий пароль для подтверждения изменений'

            .form-group
              = f.label t('activerecord.attributes.user.password'), class: 'col-sm-4 control-label', :for => :password
              .col-sm-7
                = f.password_field :password, autocomplete: 'off', class: 'form-control', :placeholder => 'Оставьте пустым если не планируете менять пароль'

            .form-group
              = f.label t('activerecord.attributes.user.password_confirmation'), class: 'col-sm-4 control-label', :for => :password_confirmation
              .col-sm-7
                = f.password_field :password_confirmation, autocomplete: 'off', class: 'form-control', :placeholder => 'Оставьте пустым если не планируете менять пароль'

            .form-group
              .col-sm-offset-4.col-sm-7
                = f.submit t('general.update'), class: 'btn btn-primary'

- content_for :page_js do
  :javascript
    $('.edit-user-profile').validate({
      rules: {
        'profile[name]': {
          required: true
        }
      },
      highlight: function(element) {
        $(element).closest('.form-group').addClass('has-error');
      },
      unhighlight: function(element) {
        $(element).closest('.form-group').removeClass('has-error');
      }
    });


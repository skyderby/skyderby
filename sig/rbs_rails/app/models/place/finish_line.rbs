class Place < ::ApplicationRecord
  class FinishLine < ::ApplicationRecord
    extend _ActiveRecord_Relation_ClassMethods[Place::FinishLine, ActiveRecord_Relation, Integer]

    module GeneratedAttributeMethods
      def id: () -> Integer

      def id=: (Integer) -> Integer

      def id?: () -> bool

      def id_changed?: () -> bool

      def id_change: () -> [ Integer?, Integer? ]

      def id_will_change!: () -> void

      def id_was: () -> Integer?

      def id_previously_changed?: () -> bool

      def id_previous_change: () -> Array[Integer?]?

      def id_previously_was: () -> Integer?

      def id_before_last_save: () -> Integer?

      def id_change_to_be_saved: () -> Array[Integer?]?

      def id_in_database: () -> Integer?

      def saved_change_to_id: () -> Array[Integer?]?

      def saved_change_to_id?: () -> bool

      def will_save_change_to_id?: () -> bool

      def restore_id!: () -> void

      def clear_id_change: () -> void

      def place_id: () -> Integer?

      def place_id=: (Integer?) -> Integer?

      def place_id?: () -> bool

      def place_id_changed?: () -> bool

      def place_id_change: () -> [ Integer?, Integer? ]

      def place_id_will_change!: () -> void

      def place_id_was: () -> Integer?

      def place_id_previously_changed?: () -> bool

      def place_id_previous_change: () -> Array[Integer?]?

      def place_id_previously_was: () -> Integer?

      def place_id_before_last_save: () -> Integer?

      def place_id_change_to_be_saved: () -> Array[Integer?]?

      def place_id_in_database: () -> Integer?

      def saved_change_to_place_id: () -> Array[Integer?]?

      def saved_change_to_place_id?: () -> bool

      def will_save_change_to_place_id?: () -> bool

      def restore_place_id!: () -> void

      def clear_place_id_change: () -> void

      def name: () -> String?

      def name=: (String?) -> String?

      def name?: () -> bool

      def name_changed?: () -> bool

      def name_change: () -> [ String?, String? ]

      def name_will_change!: () -> void

      def name_was: () -> String?

      def name_previously_changed?: () -> bool

      def name_previous_change: () -> Array[String?]?

      def name_previously_was: () -> String?

      def name_before_last_save: () -> String?

      def name_change_to_be_saved: () -> Array[String?]?

      def name_in_database: () -> String?

      def saved_change_to_name: () -> Array[String?]?

      def saved_change_to_name?: () -> bool

      def will_save_change_to_name?: () -> bool

      def restore_name!: () -> void

      def clear_name_change: () -> void

      def start_latitude: () -> BigDecimal?

      def start_latitude=: (BigDecimal?) -> BigDecimal?

      def start_latitude?: () -> bool

      def start_latitude_changed?: () -> bool

      def start_latitude_change: () -> [ BigDecimal?, BigDecimal? ]

      def start_latitude_will_change!: () -> void

      def start_latitude_was: () -> BigDecimal?

      def start_latitude_previously_changed?: () -> bool

      def start_latitude_previous_change: () -> Array[BigDecimal?]?

      def start_latitude_previously_was: () -> BigDecimal?

      def start_latitude_before_last_save: () -> BigDecimal?

      def start_latitude_change_to_be_saved: () -> Array[BigDecimal?]?

      def start_latitude_in_database: () -> BigDecimal?

      def saved_change_to_start_latitude: () -> Array[BigDecimal?]?

      def saved_change_to_start_latitude?: () -> bool

      def will_save_change_to_start_latitude?: () -> bool

      def restore_start_latitude!: () -> void

      def clear_start_latitude_change: () -> void

      def start_longitude: () -> BigDecimal?

      def start_longitude=: (BigDecimal?) -> BigDecimal?

      def start_longitude?: () -> bool

      def start_longitude_changed?: () -> bool

      def start_longitude_change: () -> [ BigDecimal?, BigDecimal? ]

      def start_longitude_will_change!: () -> void

      def start_longitude_was: () -> BigDecimal?

      def start_longitude_previously_changed?: () -> bool

      def start_longitude_previous_change: () -> Array[BigDecimal?]?

      def start_longitude_previously_was: () -> BigDecimal?

      def start_longitude_before_last_save: () -> BigDecimal?

      def start_longitude_change_to_be_saved: () -> Array[BigDecimal?]?

      def start_longitude_in_database: () -> BigDecimal?

      def saved_change_to_start_longitude: () -> Array[BigDecimal?]?

      def saved_change_to_start_longitude?: () -> bool

      def will_save_change_to_start_longitude?: () -> bool

      def restore_start_longitude!: () -> void

      def clear_start_longitude_change: () -> void

      def end_latitude: () -> BigDecimal?

      def end_latitude=: (BigDecimal?) -> BigDecimal?

      def end_latitude?: () -> bool

      def end_latitude_changed?: () -> bool

      def end_latitude_change: () -> [ BigDecimal?, BigDecimal? ]

      def end_latitude_will_change!: () -> void

      def end_latitude_was: () -> BigDecimal?

      def end_latitude_previously_changed?: () -> bool

      def end_latitude_previous_change: () -> Array[BigDecimal?]?

      def end_latitude_previously_was: () -> BigDecimal?

      def end_latitude_before_last_save: () -> BigDecimal?

      def end_latitude_change_to_be_saved: () -> Array[BigDecimal?]?

      def end_latitude_in_database: () -> BigDecimal?

      def saved_change_to_end_latitude: () -> Array[BigDecimal?]?

      def saved_change_to_end_latitude?: () -> bool

      def will_save_change_to_end_latitude?: () -> bool

      def restore_end_latitude!: () -> void

      def clear_end_latitude_change: () -> void

      def end_longitude: () -> BigDecimal?

      def end_longitude=: (BigDecimal?) -> BigDecimal?

      def end_longitude?: () -> bool

      def end_longitude_changed?: () -> bool

      def end_longitude_change: () -> [ BigDecimal?, BigDecimal? ]

      def end_longitude_will_change!: () -> void

      def end_longitude_was: () -> BigDecimal?

      def end_longitude_previously_changed?: () -> bool

      def end_longitude_previous_change: () -> Array[BigDecimal?]?

      def end_longitude_previously_was: () -> BigDecimal?

      def end_longitude_before_last_save: () -> BigDecimal?

      def end_longitude_change_to_be_saved: () -> Array[BigDecimal?]?

      def end_longitude_in_database: () -> BigDecimal?

      def saved_change_to_end_longitude: () -> Array[BigDecimal?]?

      def saved_change_to_end_longitude?: () -> bool

      def will_save_change_to_end_longitude?: () -> bool

      def restore_end_longitude!: () -> void

      def clear_end_longitude_change: () -> void

      def created_at: () -> ActiveSupport::TimeWithZone

      def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

      def created_at?: () -> bool

      def created_at_changed?: () -> bool

      def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def created_at_will_change!: () -> void

      def created_at_was: () -> ActiveSupport::TimeWithZone?

      def created_at_previously_changed?: () -> bool

      def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def created_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_created_at?: () -> bool

      def will_save_change_to_created_at?: () -> bool

      def restore_created_at!: () -> void

      def clear_created_at_change: () -> void

      def updated_at: () -> ActiveSupport::TimeWithZone

      def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

      def updated_at?: () -> bool

      def updated_at_changed?: () -> bool

      def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def updated_at_will_change!: () -> void

      def updated_at_was: () -> ActiveSupport::TimeWithZone?

      def updated_at_previously_changed?: () -> bool

      def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_updated_at?: () -> bool

      def will_save_change_to_updated_at?: () -> bool

      def restore_updated_at!: () -> void

      def clear_updated_at_change: () -> void
    end
    include GeneratedAttributeMethods
    def virtual_competitions: () -> VirtualCompetition::ActiveRecord_Associations_CollectionProxy
    def virtual_competitions=: (VirtualCompetition::ActiveRecord_Associations_CollectionProxy | Array[VirtualCompetition]) -> (VirtualCompetition::ActiveRecord_Associations_CollectionProxy | Array[VirtualCompetition])
    def virtual_competition_ids: () -> Array[Integer]
    def virtual_competition_ids=: (Array[Integer]) -> Array[Integer]

    def place: () -> Place
    def place=: (Place?) -> Place?
    def reload_place: () -> Place?
    def build_place: (untyped) -> Place
    def create_place: (untyped) -> Place
    def create_place!: (untyped) -> Place

    module GeneratedRelationMethods
    end

    class ActiveRecord_Relation < ::ActiveRecord::Relation
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[Place::FinishLine, Integer]
      include Enumerable[Place::FinishLine]
    end

    class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[Place::FinishLine, Integer]
    end
  end
end

class Organizer < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Organizer, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def organizable_id: () -> Integer?

    def organizable_id=: (Integer?) -> Integer?

    def organizable_id?: () -> bool

    def organizable_id_changed?: () -> bool

    def organizable_id_change: () -> [ Integer?, Integer? ]

    def organizable_id_will_change!: () -> void

    def organizable_id_was: () -> Integer?

    def organizable_id_previously_changed?: () -> bool

    def organizable_id_previous_change: () -> Array[Integer?]?

    def organizable_id_previously_was: () -> Integer?

    def organizable_id_before_last_save: () -> Integer?

    def organizable_id_change_to_be_saved: () -> Array[Integer?]?

    def organizable_id_in_database: () -> Integer?

    def saved_change_to_organizable_id: () -> Array[Integer?]?

    def saved_change_to_organizable_id?: () -> bool

    def will_save_change_to_organizable_id?: () -> bool

    def restore_organizable_id!: () -> void

    def clear_organizable_id_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone?

    def created_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone?

    def updated_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void

    def organizable_type: () -> String?

    def organizable_type=: (String?) -> String?

    def organizable_type?: () -> bool

    def organizable_type_changed?: () -> bool

    def organizable_type_change: () -> [ String?, String? ]

    def organizable_type_will_change!: () -> void

    def organizable_type_was: () -> String?

    def organizable_type_previously_changed?: () -> bool

    def organizable_type_previous_change: () -> Array[String?]?

    def organizable_type_previously_was: () -> String?

    def organizable_type_before_last_save: () -> String?

    def organizable_type_change_to_be_saved: () -> Array[String?]?

    def organizable_type_in_database: () -> String?

    def saved_change_to_organizable_type: () -> Array[String?]?

    def saved_change_to_organizable_type?: () -> bool

    def will_save_change_to_organizable_type?: () -> bool

    def restore_organizable_type!: () -> void

    def clear_organizable_type_change: () -> void

    def user_id: () -> Integer?

    def user_id=: (Integer?) -> Integer?

    def user_id?: () -> bool

    def user_id_changed?: () -> bool

    def user_id_change: () -> [ Integer?, Integer? ]

    def user_id_will_change!: () -> void

    def user_id_was: () -> Integer?

    def user_id_previously_changed?: () -> bool

    def user_id_previous_change: () -> Array[Integer?]?

    def user_id_previously_was: () -> Integer?

    def user_id_before_last_save: () -> Integer?

    def user_id_change_to_be_saved: () -> Array[Integer?]?

    def user_id_in_database: () -> Integer?

    def saved_change_to_user_id: () -> Array[Integer?]?

    def saved_change_to_user_id?: () -> bool

    def will_save_change_to_user_id?: () -> bool

    def restore_user_id!: () -> void

    def clear_user_id_change: () -> void
  end
  include GeneratedAttributeMethods

  def organizable: () -> untyped
  def organizable=: (untyped?) -> untyped?
  def reload_organizable: () -> untyped?
  def user: () -> User
  def user=: (User?) -> User?
  def reload_user: () -> User?
  def build_user: (untyped) -> User
  def create_user: (untyped) -> User
  def create_user!: (untyped) -> User

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Organizer, Integer]
    include Enumerable[Organizer]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Organizer, Integer]
  end
end

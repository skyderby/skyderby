class VirtualCompetition < ::ApplicationRecord
  class CustomInterval < ::ApplicationRecord
    extend _ActiveRecord_Relation_ClassMethods[VirtualCompetition::CustomInterval, ActiveRecord_Relation, Integer]

    module GeneratedAttributeMethods
      def id: () -> Integer

      def id=: (Integer) -> Integer

      def id?: () -> bool

      def id_changed?: () -> bool

      def id_change: () -> [ Integer?, Integer? ]

      def id_will_change!: () -> void

      def id_was: () -> Integer?

      def id_previously_changed?: () -> bool

      def id_previous_change: () -> Array[Integer?]?

      def id_previously_was: () -> Integer?

      def id_before_last_save: () -> Integer?

      def id_change_to_be_saved: () -> Array[Integer?]?

      def id_in_database: () -> Integer?

      def saved_change_to_id: () -> Array[Integer?]?

      def saved_change_to_id?: () -> bool

      def will_save_change_to_id?: () -> bool

      def restore_id!: () -> void

      def clear_id_change: () -> void

      def virtual_competition_id: () -> Integer?

      def virtual_competition_id=: (Integer?) -> Integer?

      def virtual_competition_id?: () -> bool

      def virtual_competition_id_changed?: () -> bool

      def virtual_competition_id_change: () -> [ Integer?, Integer? ]

      def virtual_competition_id_will_change!: () -> void

      def virtual_competition_id_was: () -> Integer?

      def virtual_competition_id_previously_changed?: () -> bool

      def virtual_competition_id_previous_change: () -> Array[Integer?]?

      def virtual_competition_id_previously_was: () -> Integer?

      def virtual_competition_id_before_last_save: () -> Integer?

      def virtual_competition_id_change_to_be_saved: () -> Array[Integer?]?

      def virtual_competition_id_in_database: () -> Integer?

      def saved_change_to_virtual_competition_id: () -> Array[Integer?]?

      def saved_change_to_virtual_competition_id?: () -> bool

      def will_save_change_to_virtual_competition_id?: () -> bool

      def restore_virtual_competition_id!: () -> void

      def clear_virtual_competition_id_change: () -> void

      def name: () -> String?

      def name=: (String?) -> String?

      def name?: () -> bool

      def name_changed?: () -> bool

      def name_change: () -> [ String?, String? ]

      def name_will_change!: () -> void

      def name_was: () -> String?

      def name_previously_changed?: () -> bool

      def name_previous_change: () -> Array[String?]?

      def name_previously_was: () -> String?

      def name_before_last_save: () -> String?

      def name_change_to_be_saved: () -> Array[String?]?

      def name_in_database: () -> String?

      def saved_change_to_name: () -> Array[String?]?

      def saved_change_to_name?: () -> bool

      def will_save_change_to_name?: () -> bool

      def restore_name!: () -> void

      def clear_name_change: () -> void

      def slug: () -> String?

      def slug=: (String?) -> String?

      def slug?: () -> bool

      def slug_changed?: () -> bool

      def slug_change: () -> [ String?, String? ]

      def slug_will_change!: () -> void

      def slug_was: () -> String?

      def slug_previously_changed?: () -> bool

      def slug_previous_change: () -> Array[String?]?

      def slug_previously_was: () -> String?

      def slug_before_last_save: () -> String?

      def slug_change_to_be_saved: () -> Array[String?]?

      def slug_in_database: () -> String?

      def saved_change_to_slug: () -> Array[String?]?

      def saved_change_to_slug?: () -> bool

      def will_save_change_to_slug?: () -> bool

      def restore_slug!: () -> void

      def clear_slug_change: () -> void

      def period_from: () -> ActiveSupport::TimeWithZone?

      def period_from=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

      def period_from?: () -> bool

      def period_from_changed?: () -> bool

      def period_from_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def period_from_will_change!: () -> void

      def period_from_was: () -> ActiveSupport::TimeWithZone?

      def period_from_previously_changed?: () -> bool

      def period_from_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def period_from_previously_was: () -> ActiveSupport::TimeWithZone?

      def period_from_before_last_save: () -> ActiveSupport::TimeWithZone?

      def period_from_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def period_from_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_period_from: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_period_from?: () -> bool

      def will_save_change_to_period_from?: () -> bool

      def restore_period_from!: () -> void

      def clear_period_from_change: () -> void

      def period_to: () -> ActiveSupport::TimeWithZone?

      def period_to=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

      def period_to?: () -> bool

      def period_to_changed?: () -> bool

      def period_to_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def period_to_will_change!: () -> void

      def period_to_was: () -> ActiveSupport::TimeWithZone?

      def period_to_previously_changed?: () -> bool

      def period_to_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def period_to_previously_was: () -> ActiveSupport::TimeWithZone?

      def period_to_before_last_save: () -> ActiveSupport::TimeWithZone?

      def period_to_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def period_to_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_period_to: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_period_to?: () -> bool

      def will_save_change_to_period_to?: () -> bool

      def restore_period_to!: () -> void

      def clear_period_to_change: () -> void

      def created_at: () -> ActiveSupport::TimeWithZone

      def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

      def created_at?: () -> bool

      def created_at_changed?: () -> bool

      def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def created_at_will_change!: () -> void

      def created_at_was: () -> ActiveSupport::TimeWithZone?

      def created_at_previously_changed?: () -> bool

      def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def created_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_created_at?: () -> bool

      def will_save_change_to_created_at?: () -> bool

      def restore_created_at!: () -> void

      def clear_created_at_change: () -> void

      def updated_at: () -> ActiveSupport::TimeWithZone

      def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

      def updated_at?: () -> bool

      def updated_at_changed?: () -> bool

      def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

      def updated_at_will_change!: () -> void

      def updated_at_was: () -> ActiveSupport::TimeWithZone?

      def updated_at_previously_changed?: () -> bool

      def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

      def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

      def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

      def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

      def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

      def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

      def saved_change_to_updated_at?: () -> bool

      def will_save_change_to_updated_at?: () -> bool

      def restore_updated_at!: () -> void

      def clear_updated_at_change: () -> void
    end
    include GeneratedAttributeMethods

    def virtual_competition: () -> VirtualCompetition
    def virtual_competition=: (VirtualCompetition?) -> VirtualCompetition?
    def reload_virtual_competition: () -> VirtualCompetition?
    def build_virtual_competition: (untyped) -> VirtualCompetition
    def create_virtual_competition: (untyped) -> VirtualCompetition
    def create_virtual_competition!: (untyped) -> VirtualCompetition

    def self.until: (untyped time) -> ActiveRecord_Relation

    module GeneratedRelationMethods
      def until: (untyped time) -> ActiveRecord_Relation
    end

    class ActiveRecord_Relation < ::ActiveRecord::Relation
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[VirtualCompetition::CustomInterval, Integer]
      include Enumerable[VirtualCompetition::CustomInterval]
    end

    class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[VirtualCompetition::CustomInterval, Integer]
    end
  end
end

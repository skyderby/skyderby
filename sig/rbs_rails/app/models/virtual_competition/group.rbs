class VirtualCompetition < ::ApplicationRecord
  class Group < ::ApplicationRecord
    extend _ActiveRecord_Relation_ClassMethods[VirtualCompetition::Group, ActiveRecord_Relation, Integer]

    module GeneratedAttributeMethods
      def id: () -> Integer

      def id=: (Integer) -> Integer

      def id?: () -> bool

      def id_changed?: () -> bool

      def id_change: () -> [ Integer?, Integer? ]

      def id_will_change!: () -> void

      def id_was: () -> Integer?

      def id_previously_changed?: () -> bool

      def id_previous_change: () -> Array[Integer?]?

      def id_previously_was: () -> Integer?

      def id_before_last_save: () -> Integer?

      def id_change_to_be_saved: () -> Array[Integer?]?

      def id_in_database: () -> Integer?

      def saved_change_to_id: () -> Array[Integer?]?

      def saved_change_to_id?: () -> bool

      def will_save_change_to_id?: () -> bool

      def restore_id!: () -> void

      def clear_id_change: () -> void

      def name: () -> String?

      def name=: (String?) -> String?

      def name?: () -> bool

      def name_changed?: () -> bool

      def name_change: () -> [ String?, String? ]

      def name_will_change!: () -> void

      def name_was: () -> String?

      def name_previously_changed?: () -> bool

      def name_previous_change: () -> Array[String?]?

      def name_previously_was: () -> String?

      def name_before_last_save: () -> String?

      def name_change_to_be_saved: () -> Array[String?]?

      def name_in_database: () -> String?

      def saved_change_to_name: () -> Array[String?]?

      def saved_change_to_name?: () -> bool

      def will_save_change_to_name?: () -> bool

      def restore_name!: () -> void

      def clear_name_change: () -> void

      def created_at: () -> untyped?

      def created_at=: (untyped?) -> untyped?

      def created_at?: () -> bool

      def created_at_changed?: () -> bool

      def created_at_change: () -> [ untyped?, untyped? ]

      def created_at_will_change!: () -> void

      def created_at_was: () -> untyped?

      def created_at_previously_changed?: () -> bool

      def created_at_previous_change: () -> Array[untyped?]?

      def created_at_previously_was: () -> untyped?

      def created_at_before_last_save: () -> untyped?

      def created_at_change_to_be_saved: () -> Array[untyped?]?

      def created_at_in_database: () -> untyped?

      def saved_change_to_created_at: () -> Array[untyped?]?

      def saved_change_to_created_at?: () -> bool

      def will_save_change_to_created_at?: () -> bool

      def restore_created_at!: () -> void

      def clear_created_at_change: () -> void

      def updated_at: () -> untyped?

      def updated_at=: (untyped?) -> untyped?

      def updated_at?: () -> bool

      def updated_at_changed?: () -> bool

      def updated_at_change: () -> [ untyped?, untyped? ]

      def updated_at_will_change!: () -> void

      def updated_at_was: () -> untyped?

      def updated_at_previously_changed?: () -> bool

      def updated_at_previous_change: () -> Array[untyped?]?

      def updated_at_previously_was: () -> untyped?

      def updated_at_before_last_save: () -> untyped?

      def updated_at_change_to_be_saved: () -> Array[untyped?]?

      def updated_at_in_database: () -> untyped?

      def saved_change_to_updated_at: () -> Array[untyped?]?

      def saved_change_to_updated_at?: () -> bool

      def will_save_change_to_updated_at?: () -> bool

      def restore_updated_at!: () -> void

      def clear_updated_at_change: () -> void
    end
    include GeneratedAttributeMethods
    def virtual_competitions: () -> VirtualCompetition::ActiveRecord_Associations_CollectionProxy
    def virtual_competitions=: (VirtualCompetition::ActiveRecord_Associations_CollectionProxy | Array[VirtualCompetition]) -> (VirtualCompetition::ActiveRecord_Associations_CollectionProxy | Array[VirtualCompetition])
    def virtual_competition_ids: () -> Array[Integer]
    def virtual_competition_ids=: (Array[Integer]) -> Array[Integer]

    module GeneratedRelationMethods
    end

    class ActiveRecord_Relation < ::ActiveRecord::Relation
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[VirtualCompetition::Group, Integer]
      include Enumerable[VirtualCompetition::Group]
    end

    class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[VirtualCompetition::Group, Integer]
    end
  end
end

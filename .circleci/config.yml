version: 2

references:
  test_defaults: &test_defaults
    working_directory: ~/skyderby
    docker:
      - image: circleci/ruby:3.0-node-browsers
        environment:
          DATABASE_URL: postgres://circleci:test-password@localhost/skyderby_test
          TRACK_SCANNER_URL: http://localhost:8000
          RAILS_ENV: test
          SELENIUM_HEADLESS_CHROME: 'true'
      - image: postgres:11
        environment:
          POSTGRES_USER: circleci
          POSTGRES_PASSWORD: test-password
          POSTGRES_DB: skyderby_test
      - image: skyderby/track-scanner
        command: gunicorn --workers 1 --threads 5 -b 0.0.0.0:8000 tracksegmenter:app
  save_yarn_cache: &save_yarn_cache
    save_cache:
      key: v1-yarn-packages-{{ checksum "yarn.lock" }}
      paths:
        - node_modules/
  restore_yarn_cache: &restore_yarn_cache
    restore_cache:
      keys:
        - v1-yarn-packages-{{ checksum "yarn.lock" }}
  save_bundle_cache: &save_bundle_cache
    save_cache:
      key: v1-gems-{{ checksum "Gemfile.lock" }}
      paths:
        - vendor/bundle
  restore_bundle_cache: &restore_bundle_cache
    restore_cache:
      keys:
        - v1-gems-{{ checksum "Gemfile.lock" }}
  install_ruby_gems: &install_ruby_gems
    run: bundle install --path vendor/bundle
  install_chromedriver: &install_chromedriver
    run:
      command: |
        wget http://chromedriver.storage.googleapis.com/2.36/chromedriver_linux64.zip
        unzip chromedriver_linux64.zip
        sudo cp chromedriver /usr/local/bin/.
        sudo chmod +x /usr/local/bin/chromedriver
  prepare_test: &prepare_db
    run:
      command: |
        dockerize -wait tcp://localhost:5432 -timeout 1m
        bundle exec rails db:test:prepare

jobs:
  lint_ruby:
    working_directory: ~/skyderby
    docker:
      - image: circleci/ruby:3.0-node
    steps:
      - checkout
      - *restore_bundle_cache
      - *install_ruby_gems
      - *save_bundle_cache
      - run: bundle exec rubocop --config .rubocop.yml

  lint_js:
    working_directory: ~/skyderby
    docker:
      - image: circleci/ruby:3.0-node
    steps:
      - checkout
      - *restore_yarn_cache
      - run: yarn install
      - *save_yarn_cache
      - run: yarn lint-code

  lint_styles:
    working_directory: ~/skyderby
    docker:
      - image: circleci/ruby:2.6.5-node
    steps:
      - checkout
      - *restore_yarn_cache
      - run: yarn install
      - *save_yarn_cache
      - run: yarn lint-styles

  test_unit:
    <<: *test_defaults
    steps:
      - checkout
      - *restore_bundle_cache
      - *restore_yarn_cache
      - *install_ruby_gems
      - run: yarn install
      - *save_bundle_cache
      - *prepare_db
      - run: bundle exec rails webpacker:compile
      - run: bundle exec rspec spec --tag ~type:system

  test_system:
    <<: *test_defaults
    steps:
      - checkout
      - *restore_bundle_cache
      - *restore_yarn_cache
      - run: bundle install --path vendor/bundle
      - run: yarn install
      - *save_bundle_cache
      - *install_chromedriver
      - *prepare_db
      - run: bundle exec rails assets:precompile
      - run: bundle exec rspec spec --tag type:system

  test_js:
    working_directory: ~/skyderby
    docker:
      - image: circleci/ruby:2.6.5-node
    steps:
      - checkout
      - *restore_yarn_cache
      - run: yarn install
      - *save_yarn_cache
      - run: yarn test --maxWorkers=2

  build_image:
    working_directory: ~/skyderby
    docker:
      - image: docker:18.09
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker build -t skyderby/app .
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push skyderby/app:latest


workflows:
  version: 2
  lint_test_build:
    jobs:
      - lint_ruby
      - lint_js
      - lint_styles
      - test_unit:
          requires:
            - lint_ruby
            - lint_js
      - test_system:
          requires:
            - lint_ruby
            - lint_js
      - test_js:
          requires:
            - lint_ruby
            - lint_js
      - build_image:
          requires:
            - test_unit
            - test_system
          filters:
            branches:
              only: dev
